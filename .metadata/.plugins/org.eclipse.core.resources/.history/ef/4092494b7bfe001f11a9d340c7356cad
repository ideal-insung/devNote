package sort;

public class HeapSort {

	public static void heapSort(int[] data) {
		heapSort(data,data.length);
	}
	public static void heapSort(int[] data, int size) {
		if(data.length < 2) return;
		int parentIdx = data.length/2 - 1;
		int lastIdx = data.length -1;
		for(int i=parentIdx; i >=0 ; i--) {
			heapfiy(data,i,lastIdx);
		}
		for(int i=siz; i>=0;i--) {
			swap(data,0,i);
			lastIdx -- ;
			heapfiy(data,0,lastIdx);
		}
	}
	
	public static void heapfiy(int[] data, int parentIdx, int lastIdx) {
		int leftIdx  = parentIdx * 2 + 1;
		int rightIdx = leftIdx +1;
		int targeIdx = parentIdx;
		
		if(leftIdx <= lastIdx && data[leftIdx] > data[targeIdx]) {
			targeIdx = leftIdx;
		}else if(rightIdx <= lastIdx && data[leftIdx] <data[targeIdx]) {
			targeIdx = rightIdx;
		}
		
		if(targeIdx != parentIdx) {
			swap(data,targeIdx,parentIdx);
			heapfiy(data, targeIdx, lastIdx);
		}
	}
	
	public static void swap(int data[], int i , int j) {
		int temp; // swap 하기 위한  temp 데이터
		temp    = data[i]; 
		data[i] = data[j]; 
		data[j] = temp;
	}
	
	public static void printArray(int data[]) {
		for(int a : data) {
			System.out.print(a+",");
		}
	}
	
	public static void main(String[] args) {
		int []data = {1,3,2,4,6,7,5};
		heapSort(data);
		printArray(data);
	}
}
