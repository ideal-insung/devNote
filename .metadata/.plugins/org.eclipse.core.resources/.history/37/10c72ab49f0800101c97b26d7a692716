package data_structure;

import java.util.LinkedList;

public class HashTable {

	LinkedList<Node> list[];
	int size;
	class Node {
		String key;
		String value;
		
		public Node(String key, String value) {
			this.key   = key;
			this.value = value;
		}
	}
	
	public HashTable(int size) {
		this.list = new LinkedList[size];
		this.size = size;
	}
	
	public int makeHash(String key) { //hash화 하는 함수
		return key.hashCode() % size; 
	}
	
	public void Hashput(String key, String value) {
		int idx = makeHash(key);
		LinkedList<Node> dataList = list[idx];
		if(dataList == null) {
			dataList = new LinkedList<>();
		}
		Node findNode = searchNode(dataList, key);
		if(findNode == null) {
			dataList.add(new Node(key,value));
		}else {
			findNode.value = value;
		}
	}
	
	public Node searchNode(LinkedList<Node> data, String key) {
		for(Node node : data) {
			if(node.key.equals(key)) {
				return node;
			}else {
				return null;
			}
		}
		return null;
	}
	
	public String getHashTable(String key) {
		int idx = makeHash(key);
		LinkedList<Node> dataList = list[idx];
		Node findNode = searchNode(dataList, key);
		if(findNode == null) { 
			System.out.println("데이터가 없어요!"); return null;
		}else return findNode.value;
	}
}
