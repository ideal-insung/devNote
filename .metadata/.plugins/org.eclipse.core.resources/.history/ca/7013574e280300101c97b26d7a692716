package data_structure;

public class ArrayQueue {

	int front; // deque ¿Œµ¶Ω∫
	int rear;  // inque ¿Œµ¶Ω∫
	int size;  // 
	int cnt;
	Object data[];
	
	public ArrayQueue(int size) {
		this.front = 0;
		this.rear  = 0;
		this.size  = size;
		this.cnt   = 0;
		this.data  = new Object[size];
	}
	
	public boolean isEmpty() {
		return (rear == front) && cnt < 0;
	}
	
	public boolean isFull() {
		System.out.println("rear == > " + rear);
		System.out.println("front == > " + front);
		System.out.println("cnt == > " + cnt);
		return (rear == front) && cnt >= 0;
	}
	
	public void inQue(Object obj) {
        if(isFull()) throw new IndexOutOfBoundsException();
		data[rear++] = obj;
		cnt ++;
	}
	
	public Object deQue(Object obj) {
		if(isEmpty()) throw new IndexOutOfBoundsException();
		data[front++] = obj;
		cnt --;
		return obj;
	}
	
	
}
